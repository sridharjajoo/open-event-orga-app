apply plugin: 'com.android.application'
apply plugin: 'io.sentry.android.gradle'
apply plugin: 'com.noveogroup.android.check'
apply from: './jacoco.gradle'
apply plugin: 'com.google.gms.oss.licenses.plugin'

def app_name = System.getenv('app_name') ?: "eventyay organizer"
def GOOGLE_PLACES_API_KEY = System.getenv('GOOGLE_PLACES_API_KEY') ?: "YOUR_API_KEY"

android {
    lintOptions {
        warning 'InvalidPackage'
    }

    packagingOptions {
        exclude 'META-INF/rxjava.properties'
        exclude 'META-INF/LICENSE'
    }

    compileSdkVersion versions.compileSdk
    buildToolsVersion versions.buildTools
    defaultConfig {
        applicationId "com.eventyay.organizer"
        minSdkVersion versions.minSdk
        targetSdkVersion versions.targetSdk
        versionCode 6
        versionName "1.0.5alpha"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
        manifestPlaceholders = [
            appName: app_name,
            GOOGLE_PLACES_API_KEY: GOOGLE_PLACES_API_KEY
        ]
    }
    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            buildConfigField "String", "DEFAULT_BASE_URL", '"https://open-event-api.herokuapp.com/v1/"'
            buildConfigField 'Boolean', 'HIDE_DRAWER_ITEMS', 'true'
            resValue "string", "default_base_url", '"https://open-event-api.herokuapp.com/v1/"'
        }
        debug {
            testCoverageEnabled = true
            buildConfigField "String", "DEFAULT_BASE_URL", '"https://open-event-api-dev.herokuapp.com/v1/"'
            buildConfigField 'Boolean', 'HIDE_DRAWER_ITEMS', 'false'
            resValue "string", "default_base_url", '"https://open-event-api-dev.herokuapp.com/v1/"'
        }
    }
    dataBinding {
        enabled true
    }
    defaultConfig {
        multiDexEnabled true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    testOptions {
        unitTests {
            includeAndroidResources = true
            unitTests.returnDefaultValues = true
        }
    }
}

repositories {
    maven { url "https://jitpack.io" }
    maven { url 'http://dl.bintray.com/igenius-code/maven' }
}

sentry {
    // Disables or enables the automatic configuration of proguard
    // for Sentry.  This injects a default config for proguard so
    // you don't need to do it manually.
    autoProguardConfig true

    // Enables or disables the automatic upload of mapping files
    // during a build.  If you disable this you'll need to manually
    // upload the mapping files with sentry-cli when you do a release.
    autoUpload false
}

configurations.all { config ->
    resolutionStrategy {
        force 'com.android.support:multidex:1.0.3'
    }
    if (config.name.contains('UnitTest')) {
        config.resolutionStrategy.eachDependency { details ->
            if (details.requested.group == 'com.squareup.leakcanary' && details.requested.name == 'leakcanary-android') {
                details.useTarget(group: details.requested.group, name: 'leakcanary-android-no-op', version: details.requested.version)
            }
        }
    }
}

check {
    abortOnError false
    findbugs { skip true }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    // Support Lib
    implementation 'com.android.support:multidex:1.0.3'
    implementation "com.android.support:appcompat-v7:${versions.support_lib}"
    implementation "com.android.support:cardview-v7:${versions.support_lib}"
    implementation "com.android.support:recyclerview-v7:${versions.support_lib}"
    implementation "com.android.support:design:${versions.support_lib}"
    implementation "com.android.support:palette-v7:${versions.support_lib}"
    implementation "com.takisoft.fix:preference-v7:${versions.support_lib}.0"
    implementation "com.google.android.gms:play-services-vision:${versions.play_services}"
    implementation "com.google.android.gms:play-services-places:${versions.play_services}"
    implementation 'com.android.support.constraint:constraint-layout:1.1.2'

    // Misc
    implementation "com.jakewharton.timber:timber:${versions.timber}"
    implementation 'com.mikhaellopez:circularprogressbar:1.1.1'
    implementation 'com.github.Ilhasoft:data-binding-validator:1.0.0'
    implementation "io.sentry:sentry-android:${versions.sentry_android}"
    implementation "com.github.PhilJay:MPAndroidChart:${versions.mp_android_chart}"
    compileOnly 'com.google.code.findbugs:findbugs-annotations:3.0.1'

    // Lifecycle
    implementation "android.arch.lifecycle:runtime:$versions.lifecycle"
    implementation "android.arch.lifecycle:extensions:$versions.lifecycle"
    implementation "android.arch.lifecycle:common-java8:$versions.lifecycle"
    annotationProcessor "android.arch.lifecycle:compiler:$versions.lifecycle"

    //WorkManager
    implementation "android.arch.work:work-runtime:${versions.work_manager}"

    // DbFlow
    implementation "com.github.raizlabs.dbflow:dbflow-core:${versions.dbflow}"
    implementation "com.github.raizlabs.dbflow:dbflow:${versions.dbflow}"
    implementation "com.github.raizlabs.dbflow:dbflow-rx2:${versions.dbflow}"
    annotationProcessor "com.github.raizlabs.dbflow:dbflow-processor:${versions.dbflow}"

    // Dagger
    implementation "com.google.dagger:dagger:${versions.dagger}"
    implementation "com.google.dagger:dagger-android:${versions.dagger}"
    implementation "com.google.dagger:dagger-android-support:${versions.dagger}"
    annotationProcessor "com.google.dagger:dagger-compiler:${versions.dagger}"
    annotationProcessor "com.google.dagger:dagger-android-processor:${versions.dagger}"

    // Retrofit
    implementation "com.squareup.okhttp3:okhttp:${versions.okhttp}"
    implementation "com.squareup.retrofit2:retrofit:${versions.retrofit}"
    implementation "com.squareup.retrofit2:converter-jackson:${versions.retrofit}"
    implementation "com.squareup.retrofit2:adapter-rxjava2:${versions.retrofit}"
    implementation 'com.squareup.okhttp3:logging-interceptor:3.10.0'
    implementation 'com.github.jasminb:jsonapi-converter:0.8.1'

    // RxJava
    implementation "io.reactivex.rxjava2:rxandroid:${versions.rxandroid}"
    implementation "io.reactivex.rxjava2:rxjava:${versions.rxjava}"
    implementation 'com.f2prateek.rx.preferences2:rx-preferences:2.0.0-RC3'

    // Fast Adapter
    implementation('com.mikepenz:fastadapter:3.0.4@aar') {
        transitive = true
    }
    implementation 'com.mikepenz:fastadapter-commons:3.0.3@aar'
    implementation 'com.timehop.stickyheadersrecyclerview:library:0.4.3'
    implementation 'me.xdrop:fuzzywuzzy:1.1.9'

    // Glide
    implementation ("com.github.florent37:glidepalette:2.1.0") {
        transitive = false
    }
    implementation "com.github.bumptech.glide:glide:${versions.glide}"
    implementation "com.github.bumptech.glide:okhttp3-integration:${versions.glide}"
    annotationProcessor "com.github.bumptech.glide:compiler:${versions.glide}"

    // ThreeTen
    implementation "com.jakewharton.threetenabp:threetenabp:${versions.threetenbp}"
    testImplementation 'org.threeten:threetenbp:1.3.6'

    // Leak Canary
    debugImplementation "com.squareup.leakcanary:leakcanary-android:${versions.leak_canary}"
    releaseImplementation "com.squareup.leakcanary:leakcanary-android-no-op:${versions.leak_canary}"

    // Stetho
    debugImplementation "com.facebook.stetho:stetho:${versions.stetho}"
    debugImplementation "com.facebook.stetho:stetho-okhttp3:${versions.stetho}"
    releaseImplementation "net.igenius:stetho-no-op:${versions.stetho_no_op}"
    testImplementation "net.igenius:stetho-no-op:${versions.stetho_no_op}"

    // Butterknife
    implementation "com.jakewharton:butterknife:${versions.butterknife}"
    annotationProcessor "com.jakewharton:butterknife-compiler:${versions.butterknife}"

    // Lombok
    compileOnly "org.projectlombok:lombok:${versions.lombok}"
    testCompileOnly "org.projectlombok:lombok:${versions.lombok}"
    annotationProcessor "org.projectlombok:lombok:${versions.lombok}"
    testAnnotationProcessor "org.projectlombok:lombok:${versions.lombok}"

    //colorpicker
    implementation 'com.pes.materialcolorpicker:library:1.2.0'

    //stepper
    implementation 'com.github.badoualy:stepper-indicator:1.0.7'

    //open-source licenses
    implementation "com.google.android.gms:play-services-oss-licenses:${versions.play_services}"

    //Testing
    androidTestImplementation('com.android.support.test.espresso:espresso-core:3.0.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    testImplementation("android.arch.core:core-testing:$versions.lifecycle", {
        exclude group: 'com.android.support', module: 'support-compat'
        exclude group: 'com.android.support', module: 'support-annotations'
        exclude group: 'com.android.support', module: 'support-core-utils'
    })
    testImplementation 'junit:junit:4.12'
    testImplementation 'org.mockito:mockito-inline:2.8.9'
    testImplementation 'org.json:json:20180130'
    testImplementation "org.robolectric:robolectric:${versions.roboelectric}"
    testImplementation "org.robolectric:shadows-multidex:${versions.roboelectric}"
    testImplementation "org.robolectric:shadows-supportv4:${versions.roboelectric}"
}
